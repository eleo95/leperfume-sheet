import type { GetStaticProps, NextPage } from 'next'
import Head from 'next/head'
import Image from 'next/image'
import styles from '../styles/Home.module.css'
import { Product } from '../product/types'
import api from '../product/api'
import { Button, Flex, Grid, Link, Stack, Text } from '@chakra-ui/react'
import { useMemo, useState } from 'react'

interface Props {
  products: Product[]
}

function parseCurrency(value: number): string {
  return value.toLocaleString('es-DO', {
    style: 'currency',
    currency: 'DOP',
  })
}

const Home: NextPage<Props> = ({ products }) => {
  const [cart, setCart] = useState<Product[]>([])
  const text = useMemo(
    () =>
      cart.reduce(
        (message, product) => message.concat(`* ${product.brand} - ${product.model}: ${parseCurrency(product.price)}\n`),
        '',
      ).concat(`\nTotal: ${parseCurrency(cart.reduce((total, product) => total + product.price, 0))}`),
    [cart],
  )


  return (



    <Stack spacing={6}>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <Grid gridGap={6} templateColumns='repeat(auto-fill, minmax(240px, 1fr))'>
        {products.map((product) => (
          <Stack
            key={product.id}
            spacing={3}
            backgroundColor='gray.50'
            borderRadius='md'
            padding={4}
          >
            <Stack spacing={1}>
              <Text>{product.brand}</Text>
              <Text color='green.500' fontSize='sm' fontWeight='500'>{parseCurrency(product.price)}</Text>
            </Stack>
            <Button size='sm' colorScheme='primary' variant='outline' onClick={() => setCart(cart.concat(product))}>Agregar</Button>
          </Stack>
        ))}
      </Grid>
      {Boolean(cart.length) && (
       <Flex justifyContent='center' alignContent='center' position='sticky' bottom={4}>
         <Button
          as={Link}
          isExternal
          href={`https://wa.me/${process.env.NEXT_PUBLIC_PHONE}?text=${encodeURIComponent(text)}`}
          colorScheme='whatsapp'
          padding={4}
          width='fit-content'
          >
          Completar pedido ({cart.length} productos)
        </Button>
       </Flex>

      )}
    </Stack>
  )
}

export const getStaticProps: GetStaticProps = async () => {
  const products = await api.list();
  return {
    props: {
      products,
    },
    revalidate: 10
  }
}

export default Home
